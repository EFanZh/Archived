#lang racket

(require rackunit)
(require "exercise-1.30.rkt")

(check-equal? (sort/predicate < '(8 2 5 2 3)) '(2 2 3 5 8))
(check-equal? (sort/predicate < '()) '())
(check-equal? (sort/predicate < '(1)) '(1))
(check-equal? (sort/predicate < '(1 1)) '(1 1))
(check-equal? (sort/predicate < '(1 1 1)) '(1 1 1))
(check-equal? (sort/predicate < '(1 2)) '(1 2))
(check-equal? (sort/predicate < '(1 2 3)) '(1 2 3))
(check-equal? (sort/predicate < '(1 3 2)) '(1 2 3))
(check-equal? (sort/predicate < '(2 1 3)) '(1 2 3))
(check-equal? (sort/predicate < '(2 3 1)) '(1 2 3))
(check-equal? (sort/predicate < '(3 1 2)) '(1 2 3))
(check-equal? (sort/predicate < '(3 2 1)) '(1 2 3))
(check-equal? (sort/predicate < '(3 2 1)) '(1 2 3))
(check-equal? (sort/predicate < '(9 8 7 6 5 4 3 2 1 0)) '(0 1 2 3 4 5 6 7 8 9))
(check-equal? (sort/predicate < '(9 8 5 7 6 5 4 3 5 2 1 0)) '(0 1 2 3 4 5 5 5 6 7 8 9))
(check-equal? (sort/predicate < '(0 1 2 3 4 5 6 7 8 9)) '(0 1 2 3 4 5 6 7 8 9))
(check-equal? (sort/predicate < '(9 5 2 7 5 5 9 7 1 9 0 0 9 8 1 1 0 2 7 9 3 0 6 9 4 7 1 2 0 2 8 7 0 7 4 7 9 8 5 9 9 8))
              '(0 0 0 0 0 0 1 1 1 1 2 2 2 2 3 4 4 5 5 5 5 6 7 7 7 7 7 7 7 8 8 8 8 9 9 9 9 9 9 9 9 9))
(check-equal? (sort/predicate > '(8 2 5 2 3)) '(8 5 3 2 2))
(check-equal? (sort/predicate > '()) '())
(check-equal? (sort/predicate > '(1)) '(1))
(check-equal? (sort/predicate > '(1 1)) '(1 1))
(check-equal? (sort/predicate > '(1 1 1)) '(1 1 1))
(check-equal? (sort/predicate > '(1 2)) '(2 1))
(check-equal? (sort/predicate > '(1 2 3)) '(3 2 1))
(check-equal? (sort/predicate > '(1 3 2)) '(3 2 1))
(check-equal? (sort/predicate > '(2 1 3)) '(3 2 1))
(check-equal? (sort/predicate > '(2 3 1)) '(3 2 1))
(check-equal? (sort/predicate > '(3 1 2)) '(3 2 1))
(check-equal? (sort/predicate > '(3 2 1)) '(3 2 1))
(check-equal? (sort/predicate > '(3 2 1)) '(3 2 1))
(check-equal? (sort/predicate > '(9 8 7 6 5 4 3 2 1 0)) '(9 8 7 6 5 4 3 2 1 0))
(check-equal? (sort/predicate > '(9 8 5 7 6 5 4 3 5 2 1 0)) '(9 8 7 6 5 5 5 4 3 2 1 0))
(check-equal? (sort/predicate > '(0 1 2 3 4 5 6 7 8 9)) '(9 8 7 6 5 4 3 2 1 0))
(check-equal? (sort/predicate > '(9 5 2 7 5 5 9 7 1 9 0 0 9 8 1 1 0 2 7 9 3 0 6 9 4 7 1 2 0 2 8 7 0 7 4 7 9 8 5 9 9 8))
              '(9 9 9 9 9 9 9 9 9 8 8 8 8 7 7 7 7 7 7 7 6 5 5 5 5 4 4 3 2 2 2 2 1 1 1 1 0 0 0 0 0 0))
